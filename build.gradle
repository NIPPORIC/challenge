buildscript {
	dependencies {
		classpath group: "nu.studer", name:"gradle-jooq-plugin", version:"3.0.3"
		classpath("org.flywaydb:flyway-database-postgresql:10.10.0")
	}
}

plugins {
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id("org.flywaydb.flyway") version "10.10.0"
	id 'org.jetbrains.kotlin.jvm' version '1.9.24'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
	id "org.jooq.jooq-codegen-gradle" version "3.19.10"
}

group = 'com.quo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core:10.10.0'
	implementation 'org.flywaydb:flyway-database-postgresql:10.10.0'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.jooq:jooq:3.19.10'
	implementation 'org.jooq:jooq-meta:3.19.10'
	implementation 'org.jooq:jooq-codegen:3.19.10'
	// for jooq
	jooqCodegen "org.postgresql:postgresql:42.7.3"
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/mybook'
	user = 'myuser'
	password = 'secret'
	locations = ['classpath:db/migration']
	cleanDisabled = false
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

jooq {
	version = '3.19'
	configuration {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/mybook'
			user = 'myuser'
			password = 'secret'
		}
		generator {
			database {
				name = 'org.jooq.meta.postgres.PostgresDatabase'
				inputSchema = 'public'
				includes = ".*"
				excludes = "flyway_schema_history"
			}
			generate {
				relations = true
				records = true
				pojos = true
			}
			target {
				directory = 'src/main/jooq'
				packageName = 'com.quo.challenge.generated.jooq'
			}
		}
	}
}
compileJava {
	sourceSets.main.java.srcDirs('src/main/jooq')
}

tasks.named('test') {
	useJUnitPlatform()
}
