/*
 * This file is generated by jOOQ.
 */
package com.quo.challenge.generated.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MBook implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer bookId;
    private String name;
    private String author;
    private LocalDateTime createDate;
    private LocalDateTime updateDate;
    private Integer updateCount;

    public MBook() {}

    public MBook(MBook value) {
        this.bookId = value.bookId;
        this.name = value.name;
        this.author = value.author;
        this.createDate = value.createDate;
        this.updateDate = value.updateDate;
        this.updateCount = value.updateCount;
    }

    public MBook(
        Integer bookId,
        String name,
        String author,
        LocalDateTime createDate,
        LocalDateTime updateDate,
        Integer updateCount
    ) {
        this.bookId = bookId;
        this.name = name;
        this.author = author;
        this.createDate = createDate;
        this.updateDate = updateDate;
        this.updateCount = updateCount;
    }

    /**
     * Getter for <code>public.m_book.book_id</code>. 書籍ID
     */
    public Integer getBookId() {
        return this.bookId;
    }

    /**
     * Setter for <code>public.m_book.book_id</code>. 書籍ID
     */
    public void setBookId(Integer bookId) {
        this.bookId = bookId;
    }

    /**
     * Getter for <code>public.m_book.name</code>. 書籍名
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.m_book.name</code>. 書籍名
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.m_book.author</code>. 著者名
     */
    public String getAuthor() {
        return this.author;
    }

    /**
     * Setter for <code>public.m_book.author</code>. 著者名
     */
    public void setAuthor(String author) {
        this.author = author;
    }

    /**
     * Getter for <code>public.m_book.create_date</code>. 作成日
     */
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>public.m_book.create_date</code>. 作成日
     */
    public void setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>public.m_book.update_date</code>. 更新日
     */
    public LocalDateTime getUpdateDate() {
        return this.updateDate;
    }

    /**
     * Setter for <code>public.m_book.update_date</code>. 更新日
     */
    public void setUpdateDate(LocalDateTime updateDate) {
        this.updateDate = updateDate;
    }

    /**
     * Getter for <code>public.m_book.update_count</code>. 更新回数
     */
    public Integer getUpdateCount() {
        return this.updateCount;
    }

    /**
     * Setter for <code>public.m_book.update_count</code>. 更新回数
     */
    public void setUpdateCount(Integer updateCount) {
        this.updateCount = updateCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final MBook other = (MBook) obj;
        if (this.bookId == null) {
            if (other.bookId != null)
                return false;
        }
        else if (!this.bookId.equals(other.bookId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.author == null) {
            if (other.author != null)
                return false;
        }
        else if (!this.author.equals(other.author))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.updateDate == null) {
            if (other.updateDate != null)
                return false;
        }
        else if (!this.updateDate.equals(other.updateDate))
            return false;
        if (this.updateCount == null) {
            if (other.updateCount != null)
                return false;
        }
        else if (!this.updateCount.equals(other.updateCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.bookId == null) ? 0 : this.bookId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.author == null) ? 0 : this.author.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.updateDate == null) ? 0 : this.updateDate.hashCode());
        result = prime * result + ((this.updateCount == null) ? 0 : this.updateCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MBook (");

        sb.append(bookId);
        sb.append(", ").append(name);
        sb.append(", ").append(author);
        sb.append(", ").append(createDate);
        sb.append(", ").append(updateDate);
        sb.append(", ").append(updateCount);

        sb.append(")");
        return sb.toString();
    }
}
